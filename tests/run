#!/bin/sh

set -e

get_vars()
{
	eseq_options=''
	input=input
	output=output
	expected=expected
	invocation=''
	diffcmd=''
	r_output=r-output
	r_invocation=''
	r_diffcmd=''
	run_reseq=true
	if [ -f vars ]
	then
		. ./vars
	fi
	invocation=${invocation:-'"$ESEQ" $eseq_options < "$input" \
			    > "$output"'}
	diffcmd=${diffcmd:-'diff -u "$expected" "$output"'}
	r_invocation=${r_invocation:-'"$RESEQ" < "$r_input" > "$r_output"'}
	r_diffcmd=${r_diffcmd:-'cmp -- "$r_expected" "$r_output"'}
	r_input="${r_input:-$expected}"
	r_expected="${r_expected:-$input}"
}

if [ "$#" -ge 1 -a "${1}" = "-r" ]
then
	echo
	echo "RUNNING RESEQ TESTS"
	echo
	# Test reseq
	run_test()
	(
		cd "$1"
		rm -f r-output
		get_vars
		if ! $run_reseq
		then
			return 0
		fi
		eval "$r_invocation"
		result="$?"
		if [ "$result" -ne 0 ]
		then
			return "$result"
		fi
		eval "$r_diffcmd"
		return $?
	)
else
	echo
	echo "RUNNING RESEQ TESTS"
	echo
	# Test eseq
	run_test()
	(
		cd "$1"
		rm -f output
		get_vars
		eval "$invocation"
		result="$?"
		if [ "$result" -ne 0 ]
		then
			return "$result"
		fi
		eval "$diffcmd"
		return $?
	)
fi

########################################

: ${ESEQ=../../eseq}
: ${RESEQ=../../reseq}
: ${ESEQ_TESTS='
	empty
	cmdline-in-out
	cmdline--
	basic-text
	wrap
	prompt
	prompt-descript
	prompt-descript-only
	function-labels
	esc-seq-versus-not
	T.416
	params
	iso-2022
	cntrl-esc
	high-val
	hardstatus
	controls
'}

nt=0
np=0
nf=0
ft=''
for t in $ESEQ_TESTS
do
	echo $t
	if run_test $t
        then
		np=$((np+1))
	else
		nf=$((nf+1))
		echo
		echo FAILED: $t
		echo
		ft="$ft $t"
	fi
	nt=$((nt+1))
done

set +e
echo
echo "Ran $nt total tests"
if [ $nf -eq 0 ]
then
	tput setaf 2 2>/dev/null
	tput bold 2>/dev/null
	echo PASSED
	tput sgr0 2>/dev/null
else
	tput setaf 1 2>/dev/null
	tput bold 2>/dev/null
	echo FAILED
	tput sgr0 2>/dev/null
fi
echo "Passed: $np"
echo "Failed: $nf"
echo
echo "$ft"

# vim:sw=8 sts=8 ts=8 noet
